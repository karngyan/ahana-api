/*
 * Ahana API
 * Ahana Web Server API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: mail@karngyan.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ModelsSeries'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ModelsSeries'));
  } else {
    // Browser globals (root is window)
    if (!root.AhanaApi) {
      root.AhanaApi = {};
    }
    root.AhanaApi.SeriesApi = factory(root.AhanaApi.ApiClient, root.AhanaApi.ModelsSeries);
  }
}(this, function(ApiClient, ModelsSeries) {
  'use strict';

  /**
   * Series service.
   * @module api/SeriesApi
   * @version 1.0.0
   */

  /**
   * Constructs a new SeriesApi. 
   * @alias module:api/SeriesApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the seriesControllerGetAllSeries operation.
     * @callback module:api/SeriesApi~seriesControllerGetAllSeriesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ModelsSeries>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get All Series
     * @param {module:api/SeriesApi~seriesControllerGetAllSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ModelsSeries>}
     */
    this.seriesControllerGetAllSeries = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = [ModelsSeries];

      return this.apiClient.callApi(
        '/series/', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the seriesControllerGetSeries operation.
     * @callback module:api/SeriesApi~seriesControllerGetSeriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ModelsSeries} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Series by id
     * @param {Number} sid the sid you want to get
     * @param {module:api/SeriesApi~seriesControllerGetSeriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ModelsSeries}
     */
    this.seriesControllerGetSeries = function(sid, callback) {
      var postBody = null;

      // verify the required parameter 'sid' is set
      if (sid === undefined || sid === null) {
        throw new Error("Missing the required parameter 'sid' when calling seriesControllerGetSeries");
      }


      var pathParams = {
        'sid': sid
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = ModelsSeries;

      return this.apiClient.callApi(
        '/series/{sid}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
